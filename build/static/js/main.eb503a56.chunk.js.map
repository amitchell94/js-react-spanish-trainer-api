{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AddWord","addWord","useState","englishWord","setEnglishWord","spanishWord","setSpanishWord","value","onChange","event","target","placeholder","Button","variant","onClick","enInfinitive","esInfinitive","App","words","setWords","className","map","w","i","word","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAQMA,EAAU,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAWA,OACE,+BACE,6BACE,uBACEC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAeK,EAAMC,OAAOH,QACjDI,YAAY,cAGhB,6BACE,uBACEJ,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAeG,EAAMC,OAAOH,QACjDI,YAAY,cAGhB,6BACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QA1BR,WAMtBb,EALgB,CACdc,aAAcZ,EACda,aAAcX,KAuBZ,4BA0COY,MApCf,WACE,MAA0Bf,mBAAS,CACjC,CAAEa,aAAc,UAAWC,aAAc,WACzC,CAAED,aAAc,SAAUC,aAAc,WAF1C,mBAAOE,EAAP,KAAcC,EAAd,KASA,OACE,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,cAAd,+BACA,wBAAOA,UAAU,uBAAjB,UACE,gCACE,+BACE,yCACA,4CACA,4BAGJ,kCACGF,EAAMG,KAAI,SAACC,EAAGC,GAAJ,OACT,+BACE,6BAAKD,EAAEP,eACP,6BAAKO,EAAEN,eACP,yBAHOO,MAMX,cAAC,EAAD,CAAStB,QAvBD,SAACuB,GACfL,EAASD,EAAMO,OAAOD,iBCvCXE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb503a56.chunk.js","sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios'\nimport Button from \"react-bootstrap/Button\";\nimport { useState } from \"react\";\n\nconst baseUrl = 'http://localhost:3001/api/words'\n\nconst AddWord = ({addWord}) => {\n  const [englishWord, setEnglishWord] = useState(\"\");\n  const [spanishWord, setSpanishWord] = useState(\"\");\n\n  const addClickHandler = () => {\n    const newWord = {\n      enInfinitive: englishWord,\n      esInfinitive: spanishWord,\n    };\n\n    addWord(newWord);\n  };\n\n  return (\n    <tr>\n      <td>\n        <input\n          value={englishWord}\n          onChange={(event) => setEnglishWord(event.target.value)}\n          placeholder=\"English\"\n        ></input>\n      </td>\n      <td>\n        <input\n          value={spanishWord}\n          onChange={(event) => setSpanishWord(event.target.value)}\n          placeholder=\"Spanish\"\n        ></input>\n      </td>\n      <td>\n        <Button variant=\"primary\" onClick={addClickHandler}>Add Word</Button>\n      </td>\n    </tr>\n  );\n};\n\nfunction App() {\n  const [words, setWords] = useState([\n    { enInfinitive: \"to walk\", esInfinitive: \"caminar\" },\n    { enInfinitive: \"to fly\", esInfinitive: \"volar\" },\n  ]);\n\n  const addWord = (word) => {\n    setWords(words.concat(word))\n  } \n\n  return (\n    <div className=\"text-center\">\n      <h2 className=\"text-center\">Words to practise</h2>\n      <table className=\"table mx-auto w-auto\">\n        <thead>\n          <tr>\n            <th>English</th>\n            <th>Espa√±ol</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {words.map((w, i) => (\n            <tr key={i}>\n              <td>{w.enInfinitive}</td>\n              <td>{w.esInfinitive}</td>\n              <td></td>\n            </tr>\n          ))}\n          <AddWord addWord={addWord}/>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}